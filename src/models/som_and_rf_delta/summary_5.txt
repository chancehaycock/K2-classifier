================================================================================
                               SOM and Random Forest Model                        
================================================================================

Using training file: /Users/chancehaycock/dev/machine_learning/px402/src/models/som_and_rf_delta/train.csv
Dropping DJA Class column and using 'Class' instead
       epic_number   Period_1  ...  template_dist   class
0        201488365   6.734215  ...       0.846620      EA
1        201893576   0.929943  ...       0.292683      EA
2        201828402  19.278542  ...       0.627429   Noise
3        201738572  13.017493  ...       0.187259  OTHPER
4        201387169  18.393849  ...       1.040303   Noise
...            ...        ...  ...            ...     ...
20140    211074799   0.282114  ...       0.619107   Noise
20141    210688611   6.139027  ...       0.169998  OTHPER
20142    211161378  17.395973  ...       1.726620   Noise
20143    210494481  11.688837  ...       0.134297  OTHPER
20144    210690749  18.185219  ...       2.345101  OTHPER

[20145 rows x 25 columns]

Using simple cross validation...
CV Loop (Model Performance Estimation) using 10 folds and a total of 50 classifiers.

Using 22 features:

Period_1
Period_2
amp_ratio_21
abs_magnitude
bp_rp
bp_g
g_rp
lc_amplitude
p2p_98
p2p_mean
stddev
kurtosis
skew
iqr
mad
max_binned_p2p
mean_binned_p2p
RRab_dist
EA_dist
EB_dist
GDOR_DSCUT_dist
template_dist

Training Classifier 1
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=0).

Training Classifier 2
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=1).

Training Classifier 3
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=2).

Training Classifier 4
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=3).

Training Classifier 5
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=4).

Training Classifier 6
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=5).

Training Classifier 7
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=6).

Training Classifier 8
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=7).

Training Classifier 9
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=8).

Training Classifier 10
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=9).

Training Classifier 11
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=10).

Training Classifier 12
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=11).

Training Classifier 13
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=12).

Training Classifier 14
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=13).

Training Classifier 15
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=14).

Training Classifier 16
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=15).

Training Classifier 17
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=16).

Training Classifier 18
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=17).

Training Classifier 19
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=18).

Training Classifier 20
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=19).

Training Classifier 21
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=20).

Training Classifier 22
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=21).

Training Classifier 23
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=22).

Training Classifier 24
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=23).

Training Classifier 25
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=24).

Training Classifier 26
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=25).

Training Classifier 27
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=26).

Training Classifier 28
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=27).

Training Classifier 29
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=28).

Training Classifier 30
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=29).

Training Classifier 31
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=30).

Training Classifier 32
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=31).

Training Classifier 33
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=32).

Training Classifier 34
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=33).

Training Classifier 35
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=34).

Training Classifier 36
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=35).

Training Classifier 37
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=36).

Training Classifier 38
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=37).

Training Classifier 39
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=38).

Training Classifier 40
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=39).

Training Classifier 41
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=40).

Training Classifier 42
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=41).

Training Classifier 43
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=42).

Training Classifier 44
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=43).

Training Classifier 45
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=44).

Training Classifier 46
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=45).

Training Classifier 47
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=46).

Training Classifier 48
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=47).

Training Classifier 49
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=48).

Training Classifier 50
Downsampling OTHPER and Noise to 350 members using df.sample(random_state=49).

Average Confusion Matrix over 10 runs each on 50 sampled training sets:
[[0.957 0.    0.031 0.006 0.006 0.    0.   ]
 [0.    0.908 0.069 0.008 0.015 0.    0.   ]
 [0.013 0.062 0.875 0.006 0.    0.044 0.   ]
 [0.032 0.    0.032 0.833 0.    0.103 0.   ]
 [0.011 0.    0.    0.006 0.803 0.18  0.   ]
 [0.    0.    0.017 0.037 0.291 0.654 0.   ]
 [0.    0.    0.    0.    0.    0.    1.   ]]

Std Dev of Confusion Matrix over 10 runs each on 50 sampled training sets:
[[0.074 0.    0.057 0.019 0.019 0.    0.   ]
 [0.    0.096 0.087 0.023 0.031 0.    0.   ]
 [0.025 0.056 0.112 0.019 0.    0.063 0.   ]
 [0.039 0.    0.064 0.084 0.    0.094 0.   ]
 [0.014 0.    0.    0.011 0.062 0.057 0.   ]
 [0.    0.    0.023 0.031 0.075 0.08  0.   ]
 [0.    0.    0.    0.    0.    0.    0.   ]]

Average Feature Importances over 10 runs each on 50 sampled training sets:
[0.148 0.088 0.021 0.02  0.013 0.014 0.013 0.04  0.043 0.007 0.056 0.052
 0.085 0.056 0.053 0.043 0.018 0.072 0.059 0.036 0.04  0.024]

Std Dev of  Feature Importances over 10 runs each on 50 sampled training sets:
[0.003 0.003 0.001 0.    0.001 0.001 0.    0.002 0.001 0.    0.002 0.002
 0.004 0.003 0.003 0.002 0.001 0.003 0.002 0.002 0.002 0.001]

Confusion Matrix plot saved at /Users/chancehaycock/dev/machine_learning/px402/src/models/som_and_rf_delta/confusion_matrix_5.pdf

Feature Importance plot saved at /Users/chancehaycock/dev/machine_learning/px402/src/models/som_and_rf_delta/feature_importance_5.pdf

=================== Average Cross Validated Scores ==================


             Macro AUC Score (OVO): 0.987 +/- 0.0029

          Weighted AUC Score (OVO): 0.980 +/- 0.0037

             Macro AUC Score (OVR): 0.979 +/- 0.0036

          Weighted AUC Score (OVR): 0.966 +/- 0.0058

                    Macro F1 Score: 0.860 +/- 0.0338

                 Weighted F1 Score: 0.819 +/- 0.0332

                 Macro Fbeta Score: 0.863 +/- 0.0338

              Weighted Fbeta Score: 0.822 +/- 0.0336

                    Log Loss Score: 0.412 +/- 0.0362

             Macro Precision Score: 0.866 +/- 0.0338

          Weighted Precision Score: 0.825 +/- 0.0340

                Macro Recall Score: 0.861 +/- 0.0337

             Weighted Recall Score: 0.821 +/- 0.0328

              Model Accuracy Score: 0.821 +/- 0.0328

